[versions]
#app specific
appName = "mjdev-desktop"
appDescription = "MJDev desktop environment"
appCopyright = "(C) 2024 milan jurkulak mj@mjdev.org"
appCategory = "Desktop"
appMaintainer = "mj@mjdev.org<Milan Jurkulak>"
appMenuGroup = "Desktop"
appVendor = "mjdev"
packageName = "org.mjdev.desktop"
packageVersion = "1.0.2"
#
gradle = "8.4.0"
gradle-versions = "0.51.0"
kotlin = "1.9.22"
compose = "1.7.0-alpha03"
okhttp3 = "5.0.0-alpha.14"
coil3 = "3.0.0-rc01"
ktxCoroutinesSwing = "1.8.0"
slf4j-nop = "2.0.7"
fuzzywuzzy = "1.4.0"
ffmpeg-platform = "6.1.1-1.5.10"
google-gson = "2.11.0"
mozilla-rhino = "1.7.15"
ini4j = "0.5.4"
charts = "Beta-0.0.5"
generativeai = "0.5.0-1.0.0-wasm"
jna-platform = "5.6.0"
qrose = "1.0.1"
tts = "3.0.0-alpha.3"
compose-webview = "1.9.40-alpha03"
#compose-plugin = "1.8.0-dev1875"
#intellij = "1.17.4"

[libraries]
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "gradle" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "ktxCoroutinesSwing" }
mozilla-rhino = { module = "org.mozilla:rhino", version.ref = "mozilla-rhino" }
okhttp-client = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
google-gson = { module = "com.google.code.gson:gson", version.ref = "google-gson" }
ini4j = { module = "org.ini4j:ini4j", version.ref = "ini4j" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil3" }
coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil3" }
coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil3" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j-nop" }
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }
ffmpeg-platform = { module = "org.bytedeco:ffmpeg-platform", version.ref = "ffmpeg-platform" }
charts = { module = "io.github.thechance101:chart", version.ref = "charts" }
google-generativeai = { module = "dev.shreyaspatil.generativeai:generativeai-google-jvm", version.ref = "generativeai" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna-platform" }
qrose = { module = "io.github.alexzhirkevich:qrose", version.ref = "qrose" }
tts = { module = "nl.marc-apps:tts", version.ref = "tts" }
dbus-java-core = { module = "com.github.hypfvieh:dbus-java-core", version = "5.0.0" }
dbus-java-transport-native-unixsocket = { module = "com.github.hypfvieh:dbus-java-transport-native-unixsocket", version = "5.0.0" }
compose-webview = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "compose-webview" }
#gradle-kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

#// open ai
#//        implementation("com.aallam.openai:openai-client:3.8.2")
#// byte buffer
#//        implementation("com.ditchoom:buffer:1.4.2")
#// db connection
#//        implementation("org.jetbrains.exposed:exposed-core:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-crypt:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-dao:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-jdbc:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-jodatime:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-java-time:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-kotlin-datetime:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-json:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-money:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-spring-boot-starter:0.52.0")
#// webview
#//        implementation("org.cobraparser:Cobra:1.0.2")
#//        implementation("org.yaml:snakeyaml:1.32")
#//        implementation("com.google.guava:guava:21.0")
#//        implementation("org.apache.commons:commons-lang3:3.5")
#//        implementation("org.jooq:jooq:3.8.4")
#//        implementation("com.h2database:h2:1.4.192")
#//        implementation("com.yuvimasory:orange-extensions:1.3.0")
#//        implementation("org.projectlombok:lombok:1.18.4")
[bundles]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
compose-desktop = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }
#jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
#kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
#compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }