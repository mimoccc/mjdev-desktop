[versions]
#app specific
appName = "mjdev-desktop"
appDescription = "MJDev desktop environment"
appCopyright = "(C) 2024 milan jurkulak mj@mjdev.org"
appCategory = "Desktop"
appMaintainer = "mj@mjdev.org<Milan Jurkulak>"
appMenuGroup = "Desktop"
appVendor = "mjdev"
packageName = "org.mjdev.desktop"
packageVersion = "1.0.0"
#
gradle = "8.4.0"
kotlin = "1.9.22"
compose = "1.7.0-alpha03"
okhttp3 = "5.0.0-alpha.12"
materialKolor = "1.7.0"
coil3 = "3.0.0-alpha06"
ktor = "3.0.0-wasm2"
kotlinxCoroutinesSwing = "1.8.0"
#generativeai = "0.5.0-1.0.0-wasm"
#compose-webview = "1.9.20"
#decompose = "3.0.0-alpha07"

[libraries]
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "gradle" }
#gradle-kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
#dbus-java-core = { module = "com.github.hypfvieh:dbus-java-core", version = "5.0.0" }
#dbus-java-transport-native-unixsocket = { module = "com.github.hypfvieh:dbus-java-transport-native-unixsocket", version = "5.0.0" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil3" }
coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }
#coil-gif = { module = "io.coil-kt.coil3:coil-gif", version = "2.2.7" }
mozilla-rhino = { module = "org.mozilla:rhino", version = "1.7.13" }
okhttp-client = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
material-kolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
google-gson = { module = "com.google.code.gson:gson", version = "2.8.9" }
font-icons-awesome = { module = "br.com.devsrsouza.compose.icons:font-awesome-desktop", version = "1.1.0" }
#compose-webview = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "compose-webview" }
#decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
#decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
ini4j = { module = "org.ini4j:ini4j", version = "0.5.4" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutinesSwing" }
#google-generativeai = { module = "dev.shreyaspatil.generativeai:generativeai-google-jvm", version.ref = "generativeai" }
glide = { module = "com.github.bumptech.glide:glide", version = "4.16.0" }

#// open ai
#//        implementation("com.aallam.openai:openai-client:3.8.2")
#// byte buffer
#//        implementation("com.ditchoom:buffer:1.4.2")
#// db connection
#//        implementation("org.jetbrains.exposed:exposed-core:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-crypt:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-dao:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-jdbc:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-jodatime:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-java-time:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-kotlin-datetime:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-json:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-money:0.52.0")
#//        implementation("org.jetbrains.exposed:exposed-spring-boot-starter:0.52.0")
#// webview
#//        implementation("org.cobraparser:Cobra:1.0.2")
#//        implementation("org.yaml:snakeyaml:1.32")
#//        implementation("com.google.guava:guava:21.0")
#//        implementation("org.apache.commons:commons-lang3:3.5")
#//        implementation("org.jooq:jooq:3.8.4")
#//        implementation("com.h2database:h2:1.4.192")
#//        implementation("com.yuvimasory:orange-extensions:1.3.0")
#//        implementation("org.projectlombok:lombok:1.18.4")
#// decompose
#//        implementation(libs.decompose)
#//        implementation(libs.decompose.extensions.compose)
#// ktor client
#//        implementation("io.ktor:ktor-client-cio-jvm:2.3.2")
#//        implementation("io.ktor:ktor-client-content-negotiation:2.3.2")
#//        implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.2")
#// gson
#//        implementation("com.google.code.gson:gson:2.8.9")

[bundles]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
compose-desktop = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }